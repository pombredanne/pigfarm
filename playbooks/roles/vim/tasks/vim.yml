---
- name: Install vim on RHEL/CentOS
  action:
    module: "{{ ansible_pkg_mgr  }}"
    name: "{{ item }}"
    state: present
  with_flattened:
    - vim-enhanced
  when: ansible_os_family == 'RedHat'

- name: Install vim on Debian-like systems (exl. Debian Wheezy)
  action:
    module: "{{ ansible_pkg_mgr  }}"
    name: vim-nox
    state: present
  when: >
    ansible_os_family == 'Debian' and
    ansible_distribution_release != 'wheezy'

- name: Install vim on Debian-like systems (Debian Wheezy)
  action:
    module: "{{ ansible_pkg_mgr  }}"
    name: vim-nox
    state: present
    default_release: wheezy-backports
  when: >
    ansible_os_family == 'Debian' and
    ansible_distribution_release == 'wheezy'

- name: Install support on Fedora and Debian-like systems (exl. Debian Wheezy)
  action:
    module: "{{ ansible_pkg_mgr  }}"
    name: "{{ item }}"
    state: present
  with_items:
    - python-jedi
    - python-flake8
    - python3-jedi
    - python3-flake8
  when: >
    ansible_distribution == 'Fedora' or
    ansible_os_family == 'Debian' and
    ansible_distribution_release != 'wheezy'

- name: Install remaining support packages for Debian7/RHEL
  pip:
    executable: "{{ item[1] }}"
    name: "{{ item[0] }}"
    state: present
  with_nested:
    - [ 'jedi', 'flake8' ]
    - [ 'pip3.4', 'pip-3.2', 'pip' ]
  when: >
    (ansible_os_family == 'Debian' and
    ansible_distribution_release == 'wheezy'
    and item[1] != 'pip3.4') or
    (ansible_os_family == 'RedHat' and
    ansible_distribution != 'Fedora' and
    item[1] != 'pip-3.2')

- name: Upload vimrc file
  template:
    src: vimrc.j2
    dest: "/{{ item.key if item.key == 'root' else 'home/' + item.key }}/.vimrc"
    mode: 0640
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
  with_dict: "{{users}}"
  when: >
    (item.key in local_users or item.key == 'root') and
    item['value']['is_vim_user'] == True

- name: Create vim directories
  file:
    name: "/{{ item[1] if item[1] == 'root' else 'home/' + item[1] }}/{{ item[0] }}/"
    state: directory
    mode: 0755
    owner: "{{ item[1] }}"
    group: "{{ item[1] }}"
  with_nested:
    - ['.vim', '.vim/colors', '.vim/autoload', '.vim/bundle', '.vim/ftplugin']
    - "{{users.keys()}}"
  when: >
    (item[1] in local_users or item[1] == 'root') and
    users[item[1]]['is_vim_user'] == True

- name: Upload vim plugins/configs
  copy:
    src: "{{ item[0].name }}"
    dest: "/{{ item[1] if item[1] == 'root' else 'home/' + item[1] }}/.vim/{{ item[0].location }}/{{ item[0].name }}"
    mode: 0640
    owner: "{{ item[1] }}"
    group: "{{ item[1] }}"
  with_nested:
    - "{{vim_native_plugins}}"
    - "{{users.keys()}}"
  when: >
    (item[1] in local_users or item[1] == 'root') and
    users[item[1]]['is_vim_user'] == True

- name: Remove vim plugins/configs that are no longer used
  file:
    path: "/{{ item[1] if item[1] == 'root' else 'home/' + item[1] }}/.vim/{{ item[0].location }}/{{ item[0].name }}"
    state: absent
  with_nested:
    - "{{vim_removed_native_plugins}}"
    - "{{users.keys()}}"
  when: >
    (item[1] in local_users or item[1] == 'root') and
    users[item[1]]['is_vim_user'] == True

- name: checkout plugins from upstream git repos
  git:
    repo: "{{ vim_external_plugins[item[0]]['url'] }}"
    dest: "/{{ item[1] if item[1] == 'root' else 'home/' + item[1] }}/.vim/bundle/{{ item[0] }}"
    accept_hostkey: yes
    version: "{{ vim_external_plugins[item[0]]['version'] }}"
  with_nested:
    - "{{vim_external_plugins.keys()}}"
    - "{{users.keys()}}"
  when: >
    (item[1] in local_users or item[1] == 'root') and
    users[item[1]]['is_vim_user'] == True

- name: Fix ownership of the repositories
  file:
    path: "/{{ item[1] if item[1] == 'root' else 'home/' + item[1] }}/.vim/bundle/{{ item[0] }}"
    owner: "{{ item[1] }}"
    group: "{{ item[1] }}"
    recurse: yes
  with_nested:
    - "{{vim_external_plugins.keys()}}"
    - "{{users.keys()}}"
  when: >
    (item[1] in local_users or item[1] == 'root') and
    users[item[1]]['is_vim_user'] == True

- name: Find currently installed git plugins
  shell: "ls -1 /{{ item if item == 'root' else 'home/' + item }}/.vim/bundle/"
  changed_when: false
  always_run: true
  register: vim_current_git_plugins
  with_items: "{{users.keys()}}"
  when: >
    (item in local_users or item == 'root') and
    users[item]['is_vim_user'] == True

- debug: var=vim_current_git_plugins

- name: Calculate differences between current plugins list and desired plugins
  action: nested_looping_helper
  args:
    current_elements_hash: '{{ vim_current_git_plugins }}'
    desired_elements_list: '{{ vim_external_plugins.keys() }}'
    output_variable_name: vim_redundant_plugins

- debug: var=vim_redundant_plugins

- name: Remove redundant vim git plugins
  file:
    name: "/{{ item.item_key if item.item_key == 'root' else 'home/' + item.item_key }}/.vim/bundle/{{ item.item_val }}"
    state: absent
  with_items: "{{vim_redundant_plugins}}"

- name: Set vim as default editor for Debian
  alternatives:
    name: editor
    path: /usr/bin/vim.nox
  when: ansible_os_family == 'Debian'

- name: Set vim as default editor for RHEL/CentOS
  copy:
    content: "export VISUAL='/usr/bin/vim'\nexport EDITOR='/usr/bin/vim'\n"
    dest: /etc/profile.d/editor.sh
    mode: 0755
    owner: root
    group: root
