---
# Syncthing does not provide a repository, so we need to manually check for
# upgrades:
- name: Check if syncthing is installed
  stat:
    path: /opt/syncthing
  register: syncthing_stat

- name: Remove old syncthing setup
  file:
    name: /opt/syncthing
    state: absent
  when: >
    syncthing_stat.stat.exists == True and
    syncthing_stat.stat.isreg == True

- name: Find the current version of Syncthing available
  shell: curl "{{ syncthing_download_url }}" -s -L -I -o /dev/null -w '%{url_effective}' | sed -e 's#.*/##g'
  args:
    warn: no
  always_run: true
  changed_when: false
  register: syncthing_version_available

- debug: var=syncthing_version_available

- name: Find currently instaled version of Syncthing
  shell: /opt/syncthing/syncthing -version | awk '{print $2}'
  always_run: true
  changed_when: false
  ignore_errors: true
  register: syncthing_version_installed
  when: >
    syncthing_stat.stat.exists == True and
    syncthing_stat.stat.isdir == True

- debug: var=syncthing_version_installed
  when: >
    syncthing_stat.stat.exists == True and
    syncthing_stat.stat.isdir == True

- name: Download newest version of syncthing
  get_url:
    url: "https://github.com/syncthing/syncthing/releases/download/{{ syncthing_version_available.stdout }}/syncthing-linux-amd64-{{ syncthing_version_available.stdout }}.tar.gz"
    dest: "{{ '/tmp/syncthing-linux-amd64-' + syncthing_version_available.stdout + '.tar.gz'}}"
    force: yes
    owner: root
    group: root
    mode: 0400
  register: syncthing_downloaded
  when: >
    syncthing_stat.stat.exists == False or
    syncthing_stat.stat.isdir == False or
    syncthing_version_installed.stdout != syncthing_version_available.stdout

- name: Remove current version of syncthing
  file:
    name: /opt/syncthing/
    state: absent
  when: >
    syncthing_stat.stat.exists == True and
    syncthing_stat.stat.isdir == True and
    syncthing_version_installed.stdout != syncthing_version_available.stdout

- name: Unpack newest version of syncthing
  command: tar -xf "{{ '/tmp/syncthing-linux-amd64-' + syncthing_version_available.stdout + '.tar.gz' }}"
  args:
    chdir: /opt/
    creates: "{{ '/opt/syncthing-linux-amd64-' + syncthing_version_available.stdout + '/'}}"
  when: >
    syncthing_stat.stat.exists == False or
    syncthing_stat.stat.isdir == False or
    syncthing_version_installed.stdout != syncthing_version_available.stdout

- name: Remove temporary file
  file:
    name: "{{ '/tmp/syncthing-linux-amd64-' + syncthing_version_available.stdout + '.tar.gz'}}"
    state: absent

- name: Rename newly downloaded syncthing folder
  command: "mv -v /opt/syncthing-linux-amd64-{{ syncthing_version_available.stdout }}/ /opt/syncthing/"
  when: >
    syncthing_stat.stat.exists == False or
    syncthing_stat.stat.isdir == False or
    syncthing_version_installed.stdout != syncthing_version_available.stdout
  notify: restart syncthing

- name: Install systemd unit file
  copy:
    src: syncthing@.service
    dest: /etc/systemd/system/syncthing@.service
    owner: root
    group: root
    mode: 0644
  notify: reload systemd

- name: Start syncthing services for all the users
  service:
    name: "syncthing@{{ item }}.service"
    enabled: true
    state: running
  with_items: "{{users.keys()}}"
  when: >
    item in local_users and
    users[item]['is_syncthing_user'] == True
